# {{ ansible_managed_header }}
# {{ ansible_managed }}
{#
####################################################################################################################
##                                                                                                                ##
##  This file is intended to be used in conjustion with magento2-static.conf which handles application proxy and  ##
##  other functions residing behind basicauth settings. This will not function independently of that extras file  ##
##                                                                                                                ##
##  Additionally, as this file is intended to be inlcuded in the vhost configuration, it essentially bypasses     ##
##  basicauth settings in the vhost. This is ok for /static/ and /media/, but not /sitemap.xml (for example). Be  ##
##  careful what you add to this template. The reason this is split up in the first place is to have nginx serve  ##
##  static / media files instead of passing the requests to varnish. Allowing them to pass to varnish works, but  ##
##  it bloats the varnish cache (increasing memory footprint) and slowing down origin hits (or hits with no CDN)  ##
##                                                                                                                ##
####################################################################################################################
#}

location /static/ {
    expires max;

    # Remove signature of the static files that is used to overcome the browser cache
    location ~ ^/static/version {
        rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
    }

    # Support client managed microsite skins
    location ~* ^/static/microskin.css$ {
        try_files /microsite/${MAGE_RUN_CODE}_skin.css /microsite/default_skin.css =404;
    }

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Access-Control-Allow-Origin "*";     # Allow use from CDN origin
        expires +1y;

        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;

        if (!-f $request_filename) {
           rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    location ~* \.(html|json)$ {
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Access-Control-Allow-Origin "*";     # Allow XHR from CDN origin

        if (!-f $request_filename) {
           rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    if (!-f $request_filename) {
        rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
    }
    add_header X-Frame-Options "SAMEORIGIN";
}

location /media/ {
    try_files $uri $uri/ /get.php?$args;

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Access-Control-Allow-Origin "*";     # Allow use from CDN origin
        expires +1y;
        try_files $uri $uri/ /get.php?$args;
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;
        try_files $uri $uri/ /get.php?$args;
    }
    add_header X-Frame-Options "SAMEORIGIN";
}
